from aiogram import Bot, Dispatcher, types, F
from aiogram.types import Message, FSInputFile
from aiogram.enums import ParseMode
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv
import asyncio
import os

from dotenv import load_dotenv
load_dotenv()

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ–æ—Ç–æ
@dp.message(F.text == "/start")
async def start_handler(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="–©–æ —Ü–µ —Ç–∞–∫–µ?")
    kb.button(text="–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?")
    kb.button(text="–ó–∞–º–æ–≤–∏—Ç–∏ –µ–∫—Å–∫—É—Ä—Å—ñ—é")
    kb.button(text="–í–∞—Ä—ñ–∞–Ω—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
    kb.button(text="–í—ñ–¥–≥—É–∫–∏")
    kb.adjust(2)

    photo = FSInputFile("odesa_logo.jpg")
    await message.answer_photo(
        photo=photo,
        caption=(
            "<b>–ü—Ä–∏–≤—ñ—Ç!</b> –¶–µ <i>–û–¥–µ—Å—Å–∞ –Ω–∞–≤–º–∞–Ω–Ω—è</i> ‚Äî —Ç–≤–æ—è –Ω–µ—Å–ø–æ–¥—ñ–≤–∞–Ω–∞, –∞–ª–µ –ø—Ä–æ–¥—É–º–∞–Ω–∞ –µ–∫—Å–∫—É—Ä—Å—ñ—è –º—ñ—Å—Ç–æ–º.\n\n"
            "–¢–∏ –Ω–µ –æ–±–∏—Ä–∞—î—à –º–∞—Ä—à—Ä—É—Ç ‚Äî –º–∞—Ä—à—Ä—É—Ç –æ–±–∏—Ä–∞—î —Ç–µ–±–µ.\n\n"
            "–Ø –ø—Ä–æ–≤–µ–¥—É —Ç–µ–±–µ –≤ —Ç—ñ –º—ñ—Å—Ü—è –û–¥–µ—Å–∏, —è–∫—ñ —Ç–∏ –º—ñ–≥ —Ä–æ–∫–∞–º–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç–∏ –ø–æ–≤–∑. "
            "–í–∏–ø–∞–¥–∫–æ–≤—ñ, –µ–º–æ—Ü—ñ–π–Ω—ñ, –∂–∏–≤—ñ. –ê–ª–µ –∑ –æ–¥–µ—Å—å–∫–∏–º –±–ª–æ–≥–µ—Ä–æ–º.\n\n"
            "–û–±–µ—Ä–∏ –Ω–∏–∂—á–µ, –∑ —á–æ–≥–æ —Ö–æ—á–µ—à –ø–æ—á–∞—Ç–∏ üëá"
        ),
        reply_markup=kb.as_markup(resize_keyboard=True)
    )

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—ñ –∫–Ω–æ–ø–∫–∏
@dp.message(F.text == "–©–æ —Ü–µ —Ç–∞–∫–µ?")
async def what_is_it(message: Message):
    await message.answer(
        "‚Äú–û–¥–µ—Å—Å–∞ –Ω–∞–≤–º–∞–Ω–Ω—è‚Äù ‚Äî —Ü–µ Telegram-–±–æ—Ç, —è–∫–∏–π –æ–±–∏—Ä–∞—î –º–∞—Ä—à—Ä—É—Ç –ø–æ –û–¥–µ—Å—ñ –∑–∞–º—ñ—Å—Ç—å —Ç–µ–±–µ. "
        "–¢–∏ –Ω–∞—Ç–∏—Å–∫–∞—î—à –∫–Ω–æ–ø–∫—É ‚Äî —ñ –æ—Ç—Ä–∏–º—É—î—à –º–∞—Ä—à—Ä—É—Ç –∑ 3, 5 –∞–±–æ 10 –ª–æ–∫–∞—Ü—ñ–π.\n\n"
        "–í—Å–µ, —â–æ —Ç—Ä–µ–±–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –≤–∏—Ä—É—à–∏—Ç–∏!"
    )

@dp.message(F.text == "–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?")
async def how_it_works(message: Message):
    await message.answer(
        "1Ô∏è‚É£ –û–±–∏—Ä–∞—î—à –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª–æ–∫–∞—Ü—ñ–π\n"
        "2Ô∏è‚É£ –û—Ç—Ä–∏–º—É—î—à –º–∞—Ä—à—Ä—É—Ç (–ø–µ—Ä—à—É —ñ –æ—Å—Ç–∞–Ω–Ω—é –º–∏ –æ–±–∏—Ä–∞—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ)\n"
        "3Ô∏è‚É£ –ô–¥–µ—à –≥—É–ª—è—Ç–∏, –¥–æ—Å–ª—ñ–¥–∂—É—î—à, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É—î—à\n"
        "4Ô∏è‚É£ –ú–æ–∂–µ—à –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏ —Ç—É—Ç ‚úçÔ∏è"
    )

@dp.message(F.text == "–í–∞—Ä—ñ–∞–Ω—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
async def routes_options(message: Message):
    await message.answer(
        "–ú–æ–∂–Ω–∞ –æ–±—Ä–∞—Ç–∏ –º–∞—Ä—à—Ä—É—Ç –Ω–∞:\n\n"
        "üî∏ 3 –ª–æ–∫–∞—Ü—ñ—ó ‚Äî –∫–æ—Ä–æ—Ç–∫–∞ –ø—Ä–æ–≥—É–ª—è–Ω–∫–∞\n"
        "üî∏ 5 –ª–æ–∫–∞—Ü—ñ–π ‚Äî —ñ–¥–µ–∞–ª—å–Ω–æ –Ω–∞ –ø—ñ–≤ –¥–Ω—è\n"
        "üî∏ 10 –ª–æ–∫–∞—Ü—ñ–π ‚Äî —Å–ø—Ä–∞–≤–∂–Ω—è –ø—Ä–∏–≥–æ–¥–∞!\n\n"
        "–ü–æ—á–∞—Ç–∏ –º–∞—Ä—à—Ä—É—Ç ‚Äî –Ω–∞—Ç–∏—Å–Ω–∏ /start —ñ –æ–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç üòâ"
    )

@dp.message(F.text == "–í—ñ–¥–≥—É–∫–∏")
async def reviews(message: Message):
    await message.answer(
        "üîπ ¬´–î—É–º–∞–≤, —â–æ –∑–Ω–∞—é –û–¥–µ—Å—É ‚Äî –∞–ª–µ —Ü–µ–π –±–æ—Ç –ø–æ–∫–∞–∑–∞–≤ —ñ–Ω—à—É!¬ª\n"
        "üîπ ¬´–ü—Ä–æ–π—à–ª–∏ –º–∞—Ä—à—Ä—É—Ç –∑ –¥—Ä—É–∑—è–º–∏ ‚Äî –±—É–ª–æ —Ü—ñ–∫–∞–≤–æ —ñ –Ω–µ–∑–≤–∏—á–Ω–æ!¬ª\n"
        "üîπ ¬´–ö–∞–π—Ñ! –î—É–∂–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ. –©–µ –± –Ω–∞ —Ä–∞–π–æ–Ω—á–∏–∫–∏ üòè¬ª\n\n"
        "–•–æ—á–µ—à –∑–∞–ª–∏—à–∏—Ç–∏ —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫? –ù–∞–ø–∏—à–∏ –π–æ–≥–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ‚úçÔ∏è"
    )

# –ö–Ω–æ–ø–∫–∞ "–ó–∞–º–æ–≤–∏—Ç–∏ –µ–∫—Å–∫—É—Ä—Å—ñ—é"
@dp.message(F.text == "–ó–∞–º–æ–≤–∏—Ç–∏ –µ–∫—Å–∫—É—Ä—Å—ñ—é")
async def order_tour(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="–ó –≥—ñ–¥–æ–º")
    kb.button(text="–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ")
    kb.button(text="‚¨Ö –ù–∞–∑–∞–¥")
    kb.adjust(2)

    await message.answer(
        "<b>–û–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç —Å–≤–æ—î—ó –µ–∫—Å–∫—É—Ä—Å—ñ—ó:</b>\n\n"
        "üë• <b>–ó –≥—ñ–¥–æ–º</b> ‚Äî —Ä–µ–∞–ª—å–Ω–∞ –µ–∫—Å–∫—É—Ä—Å—ñ—è –∑ –æ–¥–µ—Å—å–∫–∏–º –±–ª–æ–≥–µ—Ä–æ–º\n"
        "üß≠ <b>–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ</b> ‚Äî –º–∞—Ä—à—Ä—É—Ç –∑ —Ç–æ—á–∫–∞–º–∏ —Ç–∞ –æ–ø–∏—Å–æ–º —É Google Maps",
        reply_markup=kb.as_markup(resize_keyboard=True)
    )

# –ó –≥—ñ–¥–æ–º
@dp.message(F.text == "–ó –≥—ñ–¥–æ–º")
async def with_guide(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 3 –ª–æ–∫–∞—Ü—ñ—ó")
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 5 –ª–æ–∫–∞—Ü—ñ–π")
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 10 –ª–æ–∫–∞—Ü—ñ–π")
    kb.button(text="‚¨Ö –ù–∞–∑–∞–¥")
    kb.adjust(2)

    await message.answer(
        "<b>–©–æ–± –∑–∞–º–æ–≤–∏—Ç–∏ —Ä–µ–∞–ª—å–Ω—É –µ–∫—Å–∫—É—Ä—Å—ñ—é –∑ –±–ª–æ–≥–µ—Ä–æ–º</b> ‚Äî –æ–±–µ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç:\n\n"
        "üö∂‚Äç‚ôÇÔ∏è <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 3 –ª–æ–∫–∞—Ü—ñ—ó</b>\n"
        "30‚Äì50 —Ö–≤–∏–ª–∏–Ω ‚Ä¢ 3‚Äì5 –æ—Å—ñ–± ‚Ä¢ 4000 –≥—Ä–Ω\n\n"
        "üö∂‚Äç‚ôÇÔ∏è <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 5 –ª–æ–∫–∞—Ü—ñ–π</b>\n"
        "2‚Äì3 –≥–æ–¥–∏–Ω–∏ ‚Ä¢ 3‚Äì5 –æ—Å—ñ–± ‚Ä¢ 6000 –≥—Ä–Ω\n\n"
        "üö∂‚Äç‚ôÇÔ∏è <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 10 –ª–æ–∫–∞—Ü—ñ–π</b>\n"
        "–ü–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∞ –ø—Ä–∏–≥–æ–¥–∞ –º—ñ—Å—Ç–æ–º ‚Ä¢ 3‚Äì5 –æ—Å—ñ–± ‚Ä¢ 15000 –≥—Ä–Ω",
        reply_markup=kb.as_markup(resize_keyboard=True)
    )

# –°–∞–º–æ—Å—Ç—ñ–π–Ω–æ
@dp.message(F.text == "–°–∞–º–æ—Å—Ç—ñ–π–Ω–æ")
async def self_guided(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 3 –ª–æ–∫–∞—Ü—ñ—ó (149 –≥—Ä–Ω)")
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 5 –ª–æ–∫–∞—Ü—ñ–π (249 –≥—Ä–Ω)")
    kb.button(text="–ú–∞—Ä—à—Ä—É—Ç –∑ 10 –ª–æ–∫–∞—Ü—ñ–π (449 –≥—Ä–Ω)")
    kb.button(text="‚¨Ö –ù–∞–∑–∞–¥")
    kb.adjust(1)

    await message.answer(
        "<b>–í–∞—Ä—ñ–∞–Ω—Ç–∏ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–∏—Ö –º–∞—Ä—à—Ä—É—Ç—ñ–≤:</b>\n\n"
        "üìç <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 3 –ª–æ–∫–∞—Ü—ñ—ó</b> ‚Äî 149 –≥—Ä–Ω\n"
        "üìç <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 5 –ª–æ–∫–∞—Ü—ñ–π</b> ‚Äî 249 –≥—Ä–Ω\n"
        "üìç <b>–ú–∞—Ä—à—Ä—É—Ç –∑ 10 –ª–æ–∫–∞—Ü—ñ–π</b> ‚Äî 449 –≥—Ä–Ω\n\n"
        "–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏ –≤–∏ –º–∏—Ç—Ç—î–≤–æ –æ—Ç—Ä–∏–º–∞—î—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –º–∞—Ä—à—Ä—É—Ç —É Google Maps –∑ –æ–ø–∏—Å–æ–º —É—Å—ñ—Ö –ª–æ–∫–∞—Ü—ñ–π üíå",
        reply_markup=kb.as_markup(resize_keyboard=True)
    )
@dp.message(F.text == "‚¨Ö –ù–∞–∑–∞–¥")
async def go_back(message: Message):
    kb = ReplyKeyboardBuilder()
    kb.button(text="–©–æ —Ü–µ —Ç–∞–∫–µ?")
    kb.button(text="–Ø–∫ —Ü–µ –ø—Ä–∞—Ü—é—î?")
    kb.button(text="–ó–∞–º–æ–≤–∏—Ç–∏ –µ–∫—Å–∫—É—Ä—Å—ñ—é")
    kb.button(text="–í–∞—Ä—ñ–∞–Ω—Ç–∏ –º–∞—Ä—à—Ä—É—Ç—ñ–≤")
    kb.button(text="–í—ñ–¥–≥—É–∫–∏")
    kb.adjust(2)

    await message.answer(
        "‚¨Ö –ü–æ–≤–µ—Ä–Ω—É–≤ —Ç–µ–±–µ –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é. –û–±–µ—Ä–∏, –∑ —á–æ–≥–æ —Ö–æ—á–µ—à –ø–æ—á–∞—Ç–∏ üëá",
        reply_markup=kb.as_markup(resize_keyboard=True)
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
